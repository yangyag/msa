server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/auth/**
          filters:
            - RewritePath=/api/auth/(?<segment>.*), /api/auth/${segment}
        - id: user-register
          uri: lb://auth-service
          predicates:
            - Path=/api/users
            - Method=POST
          filters:
            - RewritePath=/api/users/(?<segment>.*), /api/users/${segment}
        - id: user-protected
          uri: lb://auth-service
          predicates:
            - Path=/api/users/**
            - Method=GET,DELETE,PATCH,PUT
          filters:
            - RewritePath=/api/users/(?<segment>.*), /api/users/${segment}
            - JwtAuthenticationFilterFactory
        - id: post-service
          uri: lb://post-service
          predicates:
            - Path=/api/posts/**
          filters:
            - RewritePath=/api/posts/(?<segment>.*), /api/posts/${segment}
            - JwtAuthenticationFilterFactory
        - id: reply-service
          uri: lb://reply-service
          predicates:
            - Path=/api/replies/**
          filters:
            - RewritePath=/api/replies/(?<segment>.*), /api/replies/${segment}
            - JwtAuthenticationFilterFactory
        - id: category-service
          uri: lb://category-service
          predicates:
            - Path=/api/categories/**
          filters:
            - RewritePath=/api/categories/(?<segment>.*), /api/categories/${segment}
            - JwtAuthenticationFilterFactory
  security:
    csrf:
      enabled: false

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
  instance:
    preferIpAddress: true

# 별도의 CORS 설정 섹션
cors:
  allowed-origins: http://localhost:8083, http://frontend-service:8083

logging:
  config: classpath:logback-spring.xml